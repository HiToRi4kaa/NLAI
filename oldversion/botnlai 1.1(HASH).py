import telebot
import os
import hashlib

def calculate_file_hash(file_content):
    """
    –û–±—á–∏—Å–ª—é—î SHA-256 —Ö–µ—à –¥–ª—è –≤–º—ñ—Å—Ç—É —Ñ–∞–π–ª—É.

    Args:
        file_content (bytes): –í–º—ñ—Å—Ç —Ñ–∞–π–ª—É —É –±–∞–π—Ç–∞—Ö.

    Returns:
        str: SHA-256 —Ö–µ—à —É –≤–∏–≥–ª—è–¥—ñ —à—ñ—Å—Ç–Ω–∞–¥—Ü—è—Ç–∫–æ–≤–æ–≥–æ —Ä—è–¥–∫–∞.
    """
    sha256 = hashlib.sha256()
    sha256.update(file_content)
    return sha256.hexdigest()

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–æ—Ç–∞
bot = telebot.TeleBot('8064955635:AAHe78CWompJ-CQxoIOUQ_4OryhjeIkd6vw')

# –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
user_data = {}
"""
–ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.

–ö–ª—é—á - ID —á–∞—Ç—É, –∑–Ω–∞—á–µ–Ω–Ω—è - —Å–ª–æ–≤–Ω–∏–∫ –∑ –¥–∞–Ω–∏–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
"""

# –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ö–µ—à—ñ–≤ —Ñ–∞–π–ª—ñ–≤
file_hashes = {}
"""
–ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ö–µ—à—ñ–≤ —Ñ–∞–π–ª—ñ–≤.

–ö–ª—é—á - —Ö–µ—à —Ñ–∞–π–ª—É, –∑–Ω–∞—á–µ–Ω–Ω—è - —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É.
"""

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /start.

    –í—ñ—Ç–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –º–æ–¥—É–ª—ñ–≤.

    Args:
        message (telebot.types.Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """
    # –°—Ç–∞–≤–∏–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è adding_music –≤ False
    if message.chat.id in user_data:
        user_data[message.chat.id]['adding_music'] = False

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –∑ –∫–Ω–æ–ø–∫–∞–º–∏
    markup = telebot.types.InlineKeyboardMarkup()
    music_button = telebot.types.InlineKeyboardButton("üéµ–ü–æ—á–∞—Ç–∏", callback_data='music')
    markup.row(music_button)

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    bot.send_message(
        message.chat.id,
        "üéµ <b>–ü—Ä–∏–≤—ñ—Ç!</b> –Ø ‚Äî —Ç–≤—ñ–π –º—É–∑–∏—á–Ω–∏–π –±–æ—Ç! üé∂\n\n"
        "–Ø –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ —Å–ª—É—Ö–∞—Ç–∏ —É–ª—é–±–ª–µ–Ω—É –º—É–∑–∏–∫—É, —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∏ —Ç–∞ –Ω–∞—Å–æ–ª–æ–¥–∂—É–≤–∞—Ç–∏—Å—è –∑–≤—É–∫–æ–º! üî•\n\n"
        "<i>–î–∞–≤–∞–π —Å–ª—É—Ö–∞—Ç–∏ –º—É–∑–∏–∫—É —Ä–∞–∑–æ–º!</i> üéß‚ú®",
        reply_markup=markup,
        parse_mode='HTML'
    )

@bot.callback_query_handler(func=lambda call: call.data == 'music')
def music_menu(call):
    """
    –û–±—Ä–æ–±–ª—è—î –≤–∏–±—ñ—Ä –º–æ–¥—É–ª—è "–ú—É–∑–∏–∫–∞".

    –í–∏–¥–∞–ª—è—î –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –º–µ–Ω—é –∑ –æ–ø—Ü—ñ—è–º–∏ –¥–ª—è –º—É–∑–∏–∫–∏, –ø–ª–µ–π–ª–∏—Å—Ç—ñ–≤ —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤.

    Args:
        call (telebot.types.CallbackQuery): –û–±'—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏ –ø—Ä–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç—É –∫–Ω–æ–ø–∫—É.
    """
    # –°—Ç–∞–≤–∏–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è adding_music –≤ False
    if call.message.chat.id in user_data:
        user_data[call.message.chat.id]['adding_music'] = False

    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    bot.delete_message(call.message.chat.id, call.message.message_id)

    # –°—Ç–≤–æ—Ä—é—î–º–æ –º–µ–Ω—é
    markup = telebot.types.InlineKeyboardMarkup()
    music_button = telebot.types.InlineKeyboardButton("üé∂–ü—Ä–æ—Å–ª—É—Ö–∞—Ç–∏ –º—É–∑–∏–∫—É", callback_data='music_option')
    playlist_button = telebot.types.InlineKeyboardButton("üìÑ–ü–ª–µ–π–ª–∏—Å—Ç–∏", callback_data='playlist')
    tools_button = telebot.types.InlineKeyboardButton("‚öôÔ∏è–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏", callback_data='tools')
    add_music_button = telebot.types.InlineKeyboardButton("‚ûï–î–æ–¥–∞—Ç–∏ –º—É–∑–∏–∫—É", callback_data='add_music')
    markup.row(music_button, playlist_button)
    markup.row(tools_button, add_music_button)

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    bot.send_message(
        call.message.chat.id,
        "<b>üéµ –û–ø–∏—Å –∫–Ω–æ–ø–æ–∫:</b> \n\n"
        "<b>üé∂–ü—Ä–æ—Å–ª—É—Ö–∞—Ç–∏ –º—É–∑–∏–∫—É</b> ‚Äì –≤–∏–±—ñ—Ä —ñ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—Ä–µ–∫—ñ–≤.\n\n"
        "<b>üìÑ–ü–ª–µ–π–ª–∏—Å—Ç–∏</b> ‚Äì –ø–µ—Ä–µ–≥–ª—è–¥ —Ç–∞ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ø–ª–µ–π–ª–∏—Å—Ç–∞–º–∏.\n\n"
        "<b>‚öôÔ∏è–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏</b> ‚Äì –≤–∏–¥–∞–ª–µ–Ω–Ω—è –º—É–∑–∏–∫–∏ —á–∏ –ø–ª–µ–π–ª—ñ—Å—Ç—ñ–≤.\n\n"
        "<b>‚ûï–î–æ–¥–∞—Ç–∏ –º—É–∑–∏–∫—É</b> ‚Äì –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö —Ç—Ä–µ–∫—ñ–≤.",
        reply_markup=markup,
        parse_mode='HTML'
    )

@bot.callback_query_handler(func=lambda call: call.data == 'add_music')
def handle_add_music(call):
    """
    –û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–î–æ–¥–∞—Ç–∏ –º—É–∑–∏–∫—É".

    –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø—Ä–æ—Ö–∞–Ω–Ω—è–º –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∞—É–¥—ñ–æ—Ñ–∞–π–ª.

    Args:
        call (telebot.types.CallbackQuery): –û–±'—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏ –ø—Ä–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç—É –∫–Ω–æ–ø–∫—É.
    """
    bot.delete_message(call.message.chat.id, call.message.message_id)
    bot.answer_callback_query(call.id)
    bot.send_message(call.message.chat.id, "üéµ –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–∞–π–ª –∑ –º—É–∑–∏–∫–æ—é –≤ —Ü–µ–π —á–∞—Ç, —â–æ–± –¥–æ–¥–∞—Ç–∏ –π–æ–≥–æ.")
    user_data[call.message.chat.id] = {'adding_music': True}

@bot.message_handler(content_types=['audio'])
def save_music_file(message):
    """
    –û–±—Ä–æ–±–ª—è—î –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞—É–¥—ñ–æ—Ñ–∞–π–ª—É –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

    –ó–±–µ—Ä—ñ–≥–∞—î —Ñ–∞–π–ª —É –ø–∞–ø–∫—É 'downloads', —è–∫—â–æ —Ç–∞–∫–æ–≥–æ —Ñ–∞–π–ª—É —â–µ –Ω–µ–º–∞—î.
    –Ø–∫—â–æ —Ñ–∞–π–ª –≤–∂–µ —ñ—Å–Ω—É—î, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –¥–æ–¥–∞—î –∫–Ω–æ–ø–∫—É "–í–∏–π—Ç–∏".

    Args:
        message (telebot.types.Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∞—É–¥—ñ–æ—Ñ–∞–π–ª–æ–º.
    """
    user_state = user_data.get(message.chat.id, {})
    if not user_state.get('adding_music', False):
        bot.send_message(message.chat.id, "üéµ –í–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º—ñ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –º—É–∑–∏–∫–∏. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '‚ûï–î–æ–¥–∞—Ç–∏ –º—É–∑–∏–∫—É' —É –º–µ–Ω—é.")
        return

    file_info = bot.get_file(message.audio.file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    # –û–±—á–∏—Å–ª—é—î–º–æ —Ö–µ—à —Ñ–∞–π–ª—É
    file_hash = calculate_file_hash(downloaded_file)

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ñ–∞–π–ª –≤–∂–µ —ñ—Å–Ω—É—î
    if file_hash in file_hashes:
        bot.send_message(message.chat.id, "üéµ –¶–µ–π —Ñ–∞–π–ª –≤–∂–µ —ñ—Å–Ω—É—î —É –≤–∞—à—ñ–π –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ.")
    else:
        file_name = message.audio.file_name or f"{message.audio.file_id}.mp3"
        file_path = os.path.join('downloads', file_name)
        os.makedirs('downloads', exist_ok=True)
        with open(file_path, 'wb') as new_file:
            new_file.write(downloaded_file)

        file_hashes[file_hash] = file_path
        bot.send_message(message.chat.id, "üéµ –§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –¥–æ –≤–∞—à–æ—ó –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏!")

    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–í–∏–π—Ç–∏"
    markup = telebot.types.InlineKeyboardMarkup()
    exit_button = telebot.types.InlineKeyboardButton("üö™–í–∏–π—Ç–∏", callback_data='music')
    markup.add(exit_button)

    bot.send_message(message.chat.id, "üéµ –í–∏ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ —â–µ –æ–¥–∏–Ω —Ñ–∞–π–ª –∞–±–æ –≤–∏–π—Ç–∏ –∑ —Ä–µ–∂–∏–º—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è.", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == 'music_option')
def handle_music_option(call):
    """
    –û–±—Ä–æ–±–ª—è—î –≤–∏–±—ñ—Ä –º–æ–¥—É–ª—è "–ú—É–∑—ã–∫–∞".

    –ó–∞–ø—É—Å–∫–∞—î –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –º—É–∑–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤.

    Args:
        call (telebot.types.CallbackQuery): –æ–±—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏ –ø—Ä–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç—É –∫–Ω–æ–ø–∫—É.
    """
    global user_data
    chat_id = call.message.chat.id

    # –ü–µ—Ä–µ–≤—ñ—Ä—è–µ–º–æ –Ω–∞—è–≤–Ω—ñ—Ç—å –º—É–∑–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ —É –ø–∞–ø—Ü—ñ downloads
    music_files = [f for f in os.listdir('downloads') if f.endswith(('.mp3', '.wav'))]
    if not music_files:
        bot.answer_callback_query(call.id)
        bot.send_message(chat_id, "üéµ –§–∞–π–ª–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ")
        return

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_data[chat_id] = {'music_files': music_files, 'current_index': 0}
    current_music = music_files[0]

    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è
    markup = telebot.types.InlineKeyboardMarkup()
    prev_button = telebot.types.InlineKeyboardButton("‚¨ÖÔ∏è–ü–æ–ø–µ—Ä–µ–¥–Ω—è", callback_data='prev_music')
    play_button = telebot.types.InlineKeyboardButton("‚ñ∂Ô∏è–ü—Ä–æ—Å–ª—É—Ö–∞—Ç–∏", callback_data='play_music')
    next_button = telebot.types.InlineKeyboardButton("‚û°Ô∏è–ù–∞—Å—Ç—É–ø–Ω–∞", callback_data='next_music')
    markup.add(prev_button, play_button, next_button)

    bot.answer_callback_query(call.id)
    bot.edit_message_text(
        chat_id=chat_id,
        message_id=call.message.message_id,
        text=f"üéµ –ó–∞—Ä–∞–∑: {current_music}",
        reply_markup=markup
    )


@bot.callback_query_handler(func=lambda call: call.data in ['prev_music', 'next_music', 'play_music'])
def handle_music_controls(call):
    """
    –û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º—É–∑–∏–∫–æ—é.

    –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∞—É–¥—ñ–æ—Ñ–∞–π–ª –∞–±–æ –∑–º—ñ–Ω—é—î —ñ–Ω–¥–µ–∫—Å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ/–ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ —Ç—Ä–µ–∫—É.

    Args:
        call (telebot.types.CallbackQuery): –û–±—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏ –ø—Ä–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç—É –∫–Ω–æ–ø–∫—É.
    """
    global user_data
    chat_id = call.message.chat.id

    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_data_entry = user_data.get(chat_id, {})
    music_files = user_data_entry.get('music_files', [])
    current_index = user_data_entry.get('current_index', 0)

    if not music_files:
        bot.answer_callback_query(call.id)
        bot.send_message(chat_id, "üéµ –§–∞–π–ª–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")
        return

    # –û–±—Ä–æ–±–ª—è—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
    if call.data == 'prev_music':
        current_index = (current_index - 1) % len(music_files)
    elif call.data == 'next_music':
        current_index = (current_index + 1) % len(music_files)
    elif call.data == 'play_music':
        music_path = os.path.join('downloads', music_files[current_index])
        with open(music_path, 'rb') as music_file:
            bot.answer_callback_query(call.id)
            bot.send_audio(chat_id, music_file)
        return

    # –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω–¥–µ–∫—Å —Ç–∞ –Ω–∞–∑–≤—É —Ç—Ä–µ–∫—É
    user_data[chat_id]['current_index'] = current_index
    current_music = music_files[current_index]

    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—ñ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è
    markup = telebot.types.InlineKeyboardMarkup()
    prev_button = telebot.types.InlineKeyboardButton("‚¨ÖÔ∏è–ü–æ–ø–µ—Ä–µ–¥–Ω—è", callback_data='prev_music')
    play_button = telebot.types.InlineKeyboardButton("‚ñ∂Ô∏è–ü—Ä–æ—Å–ª—É—Ö–∞—Ç–∏", callback_data='play_music')
    next_button = telebot.types.InlineKeyboardButton("‚û°Ô∏è–ù–∞—Å—Ç—É–ø–Ω–∞", callback_data='next_music')
    markup.add(prev_button, play_button, next_button)

    bot.answer_callback_query(call.id)
    bot.edit_message_text(chat_id=chat_id, message_id=call.message.message_id,
                          text=f"üéµ –ó–∞—Ä–∞–∑: {current_music}", reply_markup=markup)


@bot.message_handler(commands=['help'])
def send_help(message):
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /help.

    –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –±–æ—Ç–∞.
    
    Args:
        message (telebot.types.Message): –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –±–æ—Ç–∞.
    """
    bot.send_message(message.chat.id, message)  # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é —è–∫–æ—é –≤–æ–ª–æ–¥—ñ—î –±–æ—Ç


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    bot.polling()